Author: John Royce C. Punay
Date: March 5, 2020 5:38 PM


HTTP 
    - Hypertext Transfer Protocol
    - Port 80
    - an Application layer protocol that transmits hypermedia(sound, video) documents 
        such HTML.
    - Designed for communication between web browser and web server. Can be used to other purposes.
    - It follows client-server model.
    - Stateless protocol because server connection doesn't keep keep state between requests.
    - Request from web server is being initiate by the recipient which is the web browser.
    - HTTP processed the ff:
        1. Scrtips (JS, CSS)
        2. Mark up (HTML)
        3. Images (img)
        4. Video
    - Clients and servers communicate by exchanging messages. For the web browser it's called REQUEST message whilst server an
        answer of RESPONSE.
    - Designed 1990, being sent under TCP/IP layer or over TLS an encrypted TCP connection.
    - A client-server protocol, because the request is sent by single entity. It can be user-agent (or a proxy behalf of it.)  Or a web browser.
        Or can be a robot that crawls the Web to populate (Cypress, Selenium).
Components of HTTP-based systems
    - Client - REQUEST
    - Server - RESPONSE
    - An HTTP request by web browser is transmitted through computers, routers, modems and more. This 
        is running behind the scene which is hidden under network and transport layers.
    - Client: The user-agent    
        A user-agent is any tool that performs request through the Internet example are the ff:
            1.) Web browser which used by the user
            2.) Script or programs used by engineers and web developers
            3.) Your mobile phone.
        To display web page the web browser sends a request for the web content which is representing the page. Once recieved
        It will parsed the file, to get the mark up, layout formation (CSS) scripts that calls another request that browser 
        executes then it will update the web page dynamically.
        Any event can be done on the web page it will hit network request.
Web server
    - On the opposite side the second channel is web server.
    - Which is the one that serves the documents requested by the client (user-agent).
    - Normally server is just a piece of single machine virtually,
        it actually a collection of servers sharing the process using
        load balancing through on demand web requests.
    - HTTP/1.1 Host header can share same IP address.
Proxies
    - A proxy is an operation that acts as a gateway between client and server.
    - Usually it passes through numerous computers by relaying the HTTP messages on a 
        layered protocol web stack mostly transport (TCP, UDP), network layer(Packet forwarding using routers) and physical layer.
    - A message can be or cannot be aletered based upon proxies executes.
    - Different proxies functions:
        1. Caching - public, private or browser 
        2. Filtering - Like an antivirus parental controls
        3. Load balancing - allow multiple servers for different request
        4. Authentication - Controls access for different resources 
        5. Logging - allowing the storage of historical information
Basic Aspects of HTTP
    - HTTP is simple
        HTTP messges are easy to ready as human being. To make it easier 
        for developers to debug, testing. 
    - HTTP is extensible
         Makes the protocol itself easy to use and extend. New functionality can even be introduced by a simple agreement between a client and a server about a new header's semantics.
    - HTTP is stateless 
         Due to perfomance issue the server doens't retain request meaning when its lost
         once transaction is done. The performance is about the minimising the bandwidth and connection 
         established.
    - HTTP and connections
         HTTP is being processed under transport layer can be TCP instead because its connection oriented 
         compared to UDP which isn't. So HTTP relies on TCP standard, (Port number, data, IP address, etc..)
         Client and server creates TCP connection for processing request and replying response.
         HTTP2 uses multiplexing technique for connection which more efficient.
         HTTP3 known as QUIC uses UDP as the basis but it will be nearly equivalent to TCP in the future?. 


Resources:
https://developer.mozilla.org/en-US/docs/Web/HTTP
https://en.wikipedia.org/wiki/Client%E2%80%93server_model
https://en.wikipedia.org/wiki/HTTP/3
https://en.wikipedia.org/wiki/QUIC