algorithm 
 - takes input to process an output
 - sequence of computational steps that tarnsform input to output
 - is tool for solving computational-problems
 - instance is called as an input and should consider the constrains imposed in the problem statement which neede to solve the computational-problem.
 - an algorithm is CORRECT if input compute correct output.
 - the actual requirement in algorithm is the procedure that computational problem followed.
 - sample problems that algorithm can solve
    1.) Human Genome Project
         - without algorithm this project cannot identify 100,000 genes in human DNA, a 3 billion chemical base.
         - The savings are in time, both human and machine, and in money, as more informa- tion can be extracted from laboratory techniques.
    2.) Internet
        - without algorithms people today cannot retrieve huge amounts of information.
        - routes 
    3) Electronic commerce
        - without algorithms we cannot change goods electronically depending if private or public holding data. The core techologie is public-key
            cryptography and digital signatures are based in numerical algorithms and number theory.

    4) Manufacturing and other commercial enterprices
        - without algorithms oil, politician voites, air flights, isp speed are nothing. With the help of linear programming we solve the problem.
 - have many candidate solutions. it can be none or finding the best.

data structure 
    - a way to store and organize data to accept access and modification. Important to strengthen the limitations.

technique
    - many techniques available to solve the computational-problem

hard problem
    - speed is important in regards to algorithm, that is the only way if the algorithm efficient. like how long an algorithm takes procedure its result.
    - a NP-problem is solve by approximation algorithm
    - Example problem is travelling salesman problem
        https://en.wikipedia.org/wiki/Travelling_salesman_problem
        https://www.wired.com/2013/01/traveling-salesman-problem/
parallelism
    -  over clocking cpu would melt the chips, but with the help of algorithm we can take advantage the multiple cores to process using multi-threaded

Exercises
1.) Give a real-world example that requires sorting or a real-world example that re- quires computing a convex hull.
    - Data analysis, let say were monitoring prediction over calendar. Sort is best fit when checking past month calendar period. This will be the basis 
       of the current or future events.
    - months = ["June 2020", "July 2020", "April 2020"] ==> ["April 2020", "June 2020", "July 2020"]

2.) Other than speed, what other measures of efficiency might one use in a real-world setting?
    - Of course we need to consider implementation, constraints. Achieve easy solution compare to complex solution, we know there are a lot of candidate solution.

3.) Select a data structure that you have seen previously, and discuss its strengths and limitations.
    - I would choose array because of the common operations of data structure is easy to do deal with it like
        a) Traverse small collections
        b) Search, with the help of index
        c) Add
        b) Remove
        d) Update
        e) time and space complexity is absolute prediction because the end of execution is based in the number of items
    - Array weakness
        a) Not friendly when traversing large items
4.) How are the shortest-path and traveling-salesman problems given above similar? How are they different?
    -  Because this two problem is an NP-problem.
5.) Come up with a real-world problem in which only the best solution will do. Then come up with one in which a solution that is “approximately” the best is good enough
    - Right now were are facing pandemic (covid-19). I want to utilise technology to prevent the virus spread across people. 
    - First solution is notify people, whenever they are near to a positive in virus. Using map were are able to determine it's current location.
    - Second solution is image processing to determine if the person wearing a face/shield mask.


algorithm as technology
    - as programmer we should use computer resources wisely as most of it is not available. Example memory, must us to assign variables correctly.
    - algorithm is efficient when time and space is not big.
    - implementation should be bound in software engineering practice this is well designed and documented.
    A.) Efficiency
		- 