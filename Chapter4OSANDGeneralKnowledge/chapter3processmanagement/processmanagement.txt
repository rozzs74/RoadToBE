Date created: April 25, 2020


Objectives: To have foundation and solid understanding about process management 
	under computer systems.





Processes
	- Program can have complete control of the system and it's resources.
	- Process allow multiple programs to be loaded into memory and executes it concurrently
	- In simple and straight forward definition a process is the unit of work in modern computing system.
	- Under processes we have user and os code execution. Example is system call.
	- Term process and job are both significance through operation system
	- Each CPU core can run one process at a time.
	

Memory allocation (Layout of a process in memory)
	1) Stack
	2) Heap
	3) Data
	4) Text

	Heap section - memory that is dynamically allocated during program run time.
	Stack section - temporary storage when invoking functions (such as function parameters, return addresses and local variables)

	On a side note we do know that program itself its not a process, it's just passive entity file 
		containing list of instructions stored in disk called executable fil.

		Process states
			1) New - The process is being created.
			2) Running - Instructions are being executed.
			3) Waiting - Waiting to receive an I/O event completion or signal.
			4) Ready - The process is waiting to be assigned to a processor.
			5) Terminated - The process has finished execution

		PCB(Process Control Block) - Serves as repository of data needed how process allocated.
			1) Process states - Can be found above ^
			2) Program counter - indicates an address of instruction to execute
			3) CPU registers - set of addresses
			4) CPU-scheduling information - consists of information for process schedule
			5) Memory-management information - containing memory information that relates to process
			6) Accounting information - indicates the amount of CPU and real time used 

		Threads 
			- A process is program that performs a single thread execution.
			- Example a word-processor program is running, a single thread of instructions are being executed.
			- A single thread control allows the process to perform only one task at a time.
			- Modern computers with multicore processor could performs multiple threads in parallel called multithreaded. 
				Having this the PCB is expanded by inlcuding thread information.
		
		Process scheduling
			- selects available process to be excute.
		
		Different type of system call()
			1) fork = process replication
			2) spawb = create process
			3) exec = executes process 
		Process termination 
			- The process terminated using exit() system call.
		
		Android Process Hierarchy
			Foreground process - Current process visible on the screen, current user interaction.
			Visible process - a process not visible on foreground but performing activity that foreground process is referring to.
			Service process - similar to background process but performing activity apparent to the user.
			Background process - a process performing an activity but not visible to the user.
			Empty process - a process that holds no active components associated in application.

		IPC (Interprocess Communication)
			- Processes under operating system running concurrently
			- Independent process - no data sharing.
			- Cooperating process - shared data
			- The ff are reasons allowing cooperating process
				a) Information sharing - example is copy and paste
				b) Computation speedup - to finish task quicker 
				c) Modularity  - this have to separte process by dividing the behaviour.

			- IPC requires the cooperating process means allowing to share data in between process.
				by sending and receiving it.
			- Two fundamental models of IPC
				1) Shared memory 
				2) Message passing
			- Applied through messaging services 	
			- inter-process communication or interprocess communication (IPC) refers specifically to the mechanisms an operating system provides to allow the processes to manage shared data. 
				Typically, applications can use IPC, categorized as clients and servers, where the client requests data and the server responds to client requests.
			- Pipes are one of IPC mechanisms under UNIX systems. But there are limitations
				- Allowing bidirectional?
				- half duplex or full duplex
				- Relation parent and child process
				- Are pipes can communicate over network?




https://docs.python.org/3/library/asyncio.html:2!
https://docs.python.org/3.8/library/ipc.html
https://medium.com/js-imaginea/clustering-inter-process-communication-ipc-in-node-js-748f981214e9
https://github.com/rozzs74/node-js-right-way-jim/tree/master/chapter4robustmessagingservices